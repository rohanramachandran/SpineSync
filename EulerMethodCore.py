import os
import math
import pandas as pd
import matplotlib.pyplot as plt

df1 = pd.read_csv('example.TXT')
#generated by IMU_DATA_RETREIVAL.INO

df1.to_csv('/content/NEWCSV23.TXT',
                  index = None)

df1.columns = ['roll1', 'roll2', 'roll3','roll4', 'roll5']

median1= abs(df1['roll1'].median())
print('median1: ', median1)

median2= abs(df1['roll2'].median())
print('median2: ', median2)

median3= abs(df1['roll3'].median())
print('median3: ', median3)

median4= abs(df1['roll4'].median())
print('median4: ', median4)

median5= abs(df1['roll5'].median())
print('median5: ', median5)

Cobb = median5 - median2
print(Cobb)

def heading_to_slope(heading_angle):
    angle_radians = math.radians(heading_angle)
    slope = 1/(math.tan(angle_radians))

    return slope

slope1 = heading_to_slope(median1)
slope2 = heading_to_slope(median2)
slope3 = heading_to_slope(median3)
slope4 = heading_to_slope(median4)
slope5 = heading_to_slope(median5)
print("Slope1: ", slope1)
print("Slope2: ", slope2)
print("Slope3: ", slope3)
print("Slope4: ", slope4)
print("Slope5: ", slope5)

ydistance = 2
xstep1 = 1/(slope1 * 1/ydistance)

xstep2 = 1/(slope2 * 1/ydistance)

xstep3 = 1/(slope3 * 1/ydistance)

xstep4 = 1/(slope4 * 1/ydistance)

xstep5 = 1/(slope5 * 1/ydistance)

#modified Euler's method below
plt.xlim(-10,0)
#roll1 (lowest on spine)
x1, y1 = [0, xstep1], [0, 0+slope1*xstep1]

#roll2
x2, y2 = [xstep1, xstep1 + xstep2], [0+slope1*xstep1, 0+slope1*xstep1 + slope2*xstep2]

#roll3
x3, y3 = [xstep1 + xstep2, xstep1 + xstep2 + xstep3], [0+slope1*xstep1 + slope2*xstep2, 0+slope1*xstep1 + slope2*xstep2 + slope3*xstep3]

#roll4
x4, y4 = [xstep1 + xstep2 + xstep3, xstep1 + xstep2 + xstep3 + xstep4], [0+slope1*xstep1 + slope2*xstep2 + slope3*xstep3, 0+slope1*xstep1 + slope2*xstep2 + slope3*xstep3 + slope4*xstep4]

#roll5 (highest on spine)
x5, y5 = [xstep1 + xstep2 + xstep3 + xstep4, xstep1 + xstep2 + xstep3 + xstep4 + xstep5], [0+slope1*xstep1 + slope2*xstep2 + slope3*xstep3 + slope4*xstep4, 0+slope1*xstep1 + slope2*xstep2 + slope3*xstep3 + slope4*xstep4 + slope5*xstep5]

x1=[x * -1 for x in x1]
x2=[x * -1 for x in x2]
x3=[x * -1 for x in x3]
x4=[x * -1 for x in x4]
x5=[x * -1 for x in x5]

plt.plot(x1, y1,x2, y2, x3, y3, x4, y4, x5, y5,   marker = 'o')
plt.show()
